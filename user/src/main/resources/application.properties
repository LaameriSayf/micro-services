# Configuration du serveur
server.port=8070

# Nom de l'application (nom affiché dans Eureka)
spring.application.name=nomPrenomClasseExamen

# Configuration de la base de données MySQL
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/User?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=

# JPA / Hibernate Configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

# Intégration Eureka Client
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Configuration du Config Server (optionnel)
spring.config.import=optional:configserver:http://localhost:8888

# Logging Configuration
logging.level.root=info
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} -%level -%logger{60} %msg %n
# Configuration Keycloak
keycloak.auth-server-url=http://localhost:8080
keycloak.realm=Authentication
keycloak.resource=bsn
keycloak.credentials.secret=your-client-secret
keycloak.public-client=true
keycloak.ssl-required=none
keycloak.use-resource-role-mappings=true

# Spring Security OAuth2
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/Authentication
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/Authentication/protocol/openid-connect/certs



# Endpoint d'autres services
application.config.students-url=http://localhost:8090/api/v1/student
